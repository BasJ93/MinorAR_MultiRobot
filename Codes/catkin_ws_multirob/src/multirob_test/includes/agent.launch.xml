<launch>
  <arg name="initial_pose_x" default="1" />
  <arg name="initial_pose_y" default="1" />
  <arg name="initial_pose_z" default="0" />
  <arg name="initial_pose_yaw" default="0" />
  <arg name="robot_name"/>

  <arg name="init_pose" value="-x $(arg initial_pose_x) -y $(arg initial_pose_y) -z $(arg initial_pose_z) -Y $(arg initial_pose_yaw)"/>

  <!-- Gazebo model spawner -->
  <node name="spawn_turtlebot_model" pkg="gazebo_ros" type="spawn_model"
        args="$(arg init_pose) -unpause -urdf -param /robot_description -model $(arg robot_name)"
    respawn="false"> 
  </node>

  <!-- velocity mux nodelet -->
  <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="cmd_vel_mux"
        args="load yocs_cmd_vel_mux/CmdVelMuxNodelet nodelet_manager">
    <param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml" />
    <remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
  </node>

  <!-- bumper2pc.launch.xml -->
  <node pkg="nodelet" type="nodelet" name="bumper2pointcloud" args="load kobuki_bumper2pc/Bumper2PcNodelet nodelet_manager">
    <param name="pointcloud_radius" value="0.24"/>
    <remap from="bumper2pointcloud/pointcloud"   to="sensors/bumper_pointcloud"/>
    <remap from="bumper2pointcloud/core_sensors" to="sensors/core"/>
  </node>

  <!-- robot_state_publisher  -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
    <param name="tf_prefix" type="string" value="$(arg robot_name)" />
  </node>

  <!-- fake lazer -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="$(arg robot_name)/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="camera/depth/image_raw"/>
    <remap from="scan" to="scan"/>
  </node>

 <!-- Velocity smoother -->
  <node pkg="nodelet" type="nodelet" name="navigation_velocity_smoother" 
    args="load yocs_velocity_smoother/VelocitySmootherNodelet nodelet_manager">
    <rosparam file="$(find turtlebot_bringup)/param/defaults/smoother.yaml" command="load"/>
    <remap from="navigation_velocity_smoother/smooth_cmd_vel" to="cmd_vel_mux/input/navi"/>
    <remap from="navigation_velocity_smoother/odometry" to="odom"/>
    <remap from="navigation_velocity_smoother/robot_cmd_vel" to="commands/velocity"/>
  </node>

  <!-- Safety controller-->
  <node pkg="nodelet" type="nodelet" name="kobuki_safety_controller" 
    args="load kobuki_safety_controller/SafetyControllerNodelet nodelet_manager">
    <remap from="kobuki_safety_controller/cmd_vel" to="cmd_vel_mux/input/safety_controller"/>
    <remap from="kobuki_safety_controller/events/bumper" to="events/bumper"/>
    <remap from="kobuki_safety_controller/events/cliff" to="events/cliff"/>
    <remap from="kobuki_safety_controller/events/wheel_drop" to="events/wheel_drop"/>
  </node>

  <!--move base for amcl-->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find multirob_test)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find multirob_test)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find turtlebot_navigation)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot_navigation)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot_navigation)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find turtlebot_navigation)/param/dwa_local_planner_params.yaml" command="load"/>
<!--    <param name="global_costmap/robot_base_frame" value="/$(arg robot_name)/base_footprint"/>
    <param name="local_costmap/robot_base_frame" value="/$(arg robot_name)/base_footprint"/>
-->
    <param name="global_costmap/global_frame" value="/map"/>
    <param name="global_costmap/robot_base_frame" value="/$(arg robot_name)/base_footprint"/>
    <param name="local_costmap/global_frame" value="/map"/>
    <param name="local_costmap/robot_base_frame" value="/$(arg robot_name)/base_footprint"/>
    <param name="DWAPlannerROS/global_frame_id" value="/map"/>


    <param name="global_costmap/scan/topic" value="/$(arg robot_name)/scan"/>
    <param name="local_costmap/scan/topic" value="/$(arg robot_name)/scan"/>
    <remap from="odom" to="odom"/>
    <remap from="map" to="/map"/>
    <remap from="cmd_vel" to="navigation_velocity_smoother/raw_cmd_vel"/>
  </node>

  <!--AMCL-->
  <include file="$(find multirob_test)/includes/amcl.launch.xml">
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_yaw)"/>
    <arg name="odom_frame_id" value="/$(arg robot_name)/odom"/>
    <arg name="base_frame_id" value="/$(arg robot_name)/base_footprint"/>
    <arg name="scan_topic"    value="/$(arg robot_name)/scan"/>
  </include>

  <node name="relay" type="relay" pkg="topic_tools" args="/move_base_simple/goal /$(arg robot_name)/move_base_simple/goal">
  </node>

</launch>

